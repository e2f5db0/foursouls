{"version":3,"sources":["resources/loading.gif","resources/tietopiirilogo.png","queries/queries.js","components/Button.js","components/TopicSelection.js","components/DrawerToggleButton.js","components/SideDrawer.js","components/Backdrop.js","components/Navbar.js","components/OldTopics.js","App.js","index.js"],"names":["module","exports","GET_SPLITTED_LIST","gql","Button","type","text","className","onClick","TopicSelection","leftList","rightList","map","topic","key","id","name","DrawerToggleButton","toggleDrawer","SideDrawer","show","setBody","drawerClasses","push","handleSelection","body","join","Backdrop","Navbar","useState","drawerOpen","setDrawerOpen","src","logo","alt","OldTopics","App","result","useQuery","loading","loadingAnimation","data","getSplittedList","client","ApolloClient","cache","InMemoryCache","link","HttpLink","uri","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mZCEpC,IAAMC,EAAoBC,YAAH,K,iBCafC,EAbA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAMtB,OACE,6BACE,4BAAQC,UAAWF,EAAMG,QAAS,cAAsBF,KCW/CG,EAlBQ,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAClC,OACE,6BACE,yBAAKJ,UAAU,aACb,wBAAIA,UAAU,WAAd,UACA,yBAAKA,UAAU,kBACZG,EAASE,KAAI,SAAAC,GAAK,OAAI,uBAAGC,IAAKD,EAAME,GAAIR,UAAU,cAAcM,EAAMG,SACvE,kBAAC,EAAD,CAAQX,KAAK,gBAAgBC,KAAK,aAEpC,yBAAKC,UAAU,kBACZI,EAAUC,KAAI,SAAAC,GAAK,OAAI,uBAAGC,IAAKD,EAAME,GAAIR,UAAU,cAAcM,EAAMG,SACxE,kBAAC,EAAD,CAAQX,KAAK,gBAAgBC,KAAK,gB,iBCA7BW,EAZY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC5B,OACE,oCACE,4BAAQX,UAAU,gBAAgBC,QAAS,kBAAMU,MAC/C,yBAAKX,UAAU,uBACf,yBAAKA,UAAU,uBACf,yBAAKA,UAAU,0BCgBRY,EAtBI,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMF,EAA4B,EAA5BA,aAAcG,EAAc,EAAdA,QAEpCC,EAAgB,CAAC,eACjBF,GACFE,EAAcC,KAAK,QAGrB,IAAMC,EAAkB,SAACC,GACvBJ,EAAQI,GACRP,KAGF,OACE,yBAAKX,UAAWe,EAAcI,KAAK,MACjC,4BACE,wBAAInB,UAAU,mBAAmBC,QAAS,kBAAMgB,EAAgB,UAAhE,eACA,wBAAIjB,UAAU,mBAAmBC,QAAS,kBAAMgB,EAAgB,aAAhE,oBCVOG,EANE,SAAC,GAAsB,IAApBT,EAAmB,EAAnBA,aAClB,OACE,yBAAKX,UAAU,WAAWC,QAAS,kBAAMU,QCiC9BU,EA/BA,SAAC,GAAiB,IAAfP,EAAc,EAAdA,QAAc,EAEMQ,oBAAS,GAFf,mBAEvBC,EAFuB,KAEXC,EAFW,KAIxBb,EAAe,WACNa,GAAbD,IAGF,OACE,6BACE,4BAAQvB,UAAU,UAChB,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,CAAoBW,aAAcA,KAEpC,yBAAKX,UAAU,cAAcyB,IAAKC,IAAMC,IAAI,mBAAmB1B,QAAS,kBAAMa,EAAQ,WACtF,yBAAKd,UAAU,kBACf,yBAAKA,UAAU,gBACb,4BACE,wBAAIA,UAAU,cAAcC,QAAS,kBAAMa,EAAQ,UAAnD,eACA,wBAAId,UAAU,cAAcC,QAAS,kBAAMa,EAAQ,aAAnD,qBAKR,kBAAC,EAAD,CAAYD,KAAMU,EAAYZ,aAAcA,EAAcG,QAASA,IAClES,GAAc,kBAAC,EAAD,CAAUZ,aAAcA,MCpB9BiB,EAVG,WACd,OACI,6BACI,yBAAK5B,UAAU,aACX,wBAAIA,UAAU,WAAd,oBCuCD6B,EApCH,WAAO,IAAD,EAEQP,mBAAS,QAFjB,mBAETJ,EAFS,KAEHJ,EAFG,KAIVgB,EAASC,YAASpC,GAExB,OAAImC,EAAOE,QAEP,6BACE,yBAAKP,IAAKQ,IAAkBN,IAAI,sBADlC,cAOS,SAATT,EAEA,yBAAKlB,UAAU,OACb,6BACE,kBAAC,EAAD,CAAQc,QAASA,IACjB,kBAAC,EAAD,CAAgBX,SAAU2B,EAAOI,KAAKC,gBAAgBhC,SAAUC,UAAW0B,EAAOI,KAAKC,gBAAgB/B,cAMlG,YAATc,EAEA,6BACE,kBAAC,EAAD,CAAQJ,QAASA,IACjB,kBAAC,EAAD,YAJN,G,gCC1BIsB,EAAS,IAAIC,IAAa,CAC9BC,MAAO,IAAIC,IACXC,KAAM,IAAIC,IAAS,CACjBC,IAAK,6BAITC,IAASC,OACP,kBAACC,EAAA,EAAD,CAAgBT,OAAQA,GACtB,kBAAC,EAAD,OACiBU,SAASC,eAAe,W","file":"static/js/main.3eaa0cdd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.317c24a1.gif\";","module.exports = __webpack_public_path__ + \"static/media/tietopiirilogo.52db14e0.png\";","import { gql  } from '@apollo/client'\n\nexport const GET_SPLITTED_LIST = gql`\nquery {\n  getSplittedList  {\n    leftList {\n      id\n      name\n    }\n    rightList {\n      id\n      name\n    }\n  }\n}\n`\n","import React from 'react'\n\nconst Button = ({ type, text }) => {\n  \n  const handleClick = () => {\n    // valitse topic\n  }\n  \n  return (\n    <div>\n      <button className={type} onClick={() => handleClick()}>{text}</button>\n    </div>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport Button from './Button'\n\nconst TopicSelection = ({ leftList, rightList }) => {\n  return (\n    <div>\n      <div className='Container'>\n        <h4 className='Heading'>Aiheet</h4>\n        <div className='Container-left'>\n          {leftList.map(topic => <p key={topic.id} className='Topic-item'>{topic.name}</p>)}\n          <Button type='Choice-button' text='Valitse' />\n        </div>\n        <div className='Container-left'>\n          {rightList.map(topic => <p key={topic.id} className='Topic-item'>{topic.name}</p>)}\n          <Button type='Choice-button' text='Valitse' />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TopicSelection\n","import React from 'react'\n\nconst DrawerToggleButton = ({ toggleDrawer }) => {\n  return (\n    <>\n      <button className='Toggle-Button' onClick={() => toggleDrawer()}>\n        <div className='Toggle-Button-line'></div>\n        <div className='Toggle-Button-line'></div>\n        <div className='Toggle-Button-line'></div>\n      </button>\n    </>\n  )\n}\n\nexport default DrawerToggleButton\n","import React from 'react'\n\nconst SideDrawer = ({ show, toggleDrawer, setBody }) => {\n\n  let drawerClasses = ['Side-Drawer']\n  if (show) {\n    drawerClasses.push('open')\n  }\n\n  const handleSelection = (body) => {\n    setBody(body)\n    toggleDrawer()\n  }\n\n  return (\n    <nav className={drawerClasses.join(' ')}>\n      <ul>\n        <li className='Side-Drawer-item' onClick={() => handleSelection('main')}>Aihevalinta</li>\n        <li className='Side-Drawer-item' onClick={() => handleSelection('covered')}>Vanhat Aiheet</li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default SideDrawer","import React from 'react'\n\nconst Backdrop = ({ toggleDrawer }) => {\n  return (\n    <div className='Backdrop' onClick={() => toggleDrawer()}></div>\n  )\n}\n\nexport default Backdrop\n","import React, { useState } from 'react'\nimport logo from '../resources/tietopiirilogo.png'\nimport DrawerToggleButton from './DrawerToggleButton'\nimport SideDrawer from './SideDrawer'\nimport Backdrop from './Backdrop'\n\nconst Navbar = ({ setBody }) => {\n\n  const [drawerOpen, setDrawerOpen] = useState(false)\n\n  const toggleDrawer = () => {\n    drawerOpen ? setDrawerOpen(false) : setDrawerOpen(true)\n  }\n\n  return (\n    <div>\n      <header className='Navbar'>\n        <nav className='Navbar-navigation'>\n          <div className='Navbar-navigation'>\n            <DrawerToggleButton toggleDrawer={toggleDrawer} />\n          </div>\n          <img className='Navbar-logo' src={logo} alt='RemoteSocietyNow' onClick={() => setBody('main')} />\n          <div className='Navbar-spacer'></div>\n          <div className='Navbar-items'>\n            <ul>\n              <li className='Navbar-item' onClick={() => setBody('main')}>Aihevalinta</li>\n              <li className='Navbar-item' onClick={() => setBody('covered')}>Vanhat Aiheet</li>\n            </ul>\n          </div>\n        </nav>\n      </header>\n      <SideDrawer show={drawerOpen} toggleDrawer={toggleDrawer} setBody={setBody} />\n      {drawerOpen && <Backdrop toggleDrawer={toggleDrawer} />}\n    </div>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\n\nconst OldTopics = () => {\n    return (\n        <div>\n            <div className='Container'>\n                <h1 className='Heading'>Vanhat Aiheet</h1>\n            </div>\n        </div>\n    )\n}\n\nexport default OldTopics\n","import React, { useState } from 'react'\nimport './App.css'\nimport { useQuery } from '@apollo/client'\nimport { GET_SPLITTED_LIST } from './queries/queries'\nimport loadingAnimation from './resources/loading.gif'\nimport TopicSelection from './components/TopicSelection'\nimport Navbar from './components/Navbar'\nimport OldTopics from './components/OldTopics'\n\nconst App = () => {\n\n  const [body, setBody] = useState('main')\n\n  const result = useQuery(GET_SPLITTED_LIST)\n\n  if (result.loading) {\n    return (\n      <div>\n        <img src={loadingAnimation} alt='loading animation' />\n        Loading...\n      </div>\n    )\n  }\n\n  if (body === 'main') {\n    return (\n      <div className=\"App\">\n        <div>\n          <Navbar setBody={setBody} />\n          <TopicSelection leftList={result.data.getSplittedList.leftList} rightList={result.data.getSplittedList.rightList} />\n        </div>\n      </div>\n    )\n  }\n\n  if (body === 'covered') {\n    return (\n      <div>\n        <Navbar setBody={setBody} />\n        <OldTopics />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport {\n  ApolloClient, ApolloProvider, HttpLink, InMemoryCache\n} from '@apollo/client'\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: 'http://localhost:4000/',\n  })\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>, document.getElementById('root')\n)\n"],"sourceRoot":""}